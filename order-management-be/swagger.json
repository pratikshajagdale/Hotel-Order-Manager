{
	"openapi": "3.0.0",
	"info": {
		"title": "Order Management Tool",
		"description": "API for managing orders",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "http://localhost:8080/api"
		}
	],
	"paths": {
		"/user/register": {
			"post": {
				"summary": "Register a new user",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"firstName": {
										"type": "string",
										"example": "John"
									},
									"lastName": {
										"type": "string",
										"example": "Doe"
									},
									"phoneNumber": {
										"type": "number",
										"example": 6514265140
									},
									"email": {
										"type": "string",
										"format": "email",
										"example": "john@example.com"
									},
									"password": {
										"type": "string",
										"pattern": "^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$",
										"example": "U2FsdGVkX1+ILQ91VejAVpr/xiaq/Mf0XsHxR7fEKR4=",
										"description": "Password@123"
									},
									"role": {
										"type": "string",
										"example": "OWNER",
										"description": "Values could be OWNER, ADMIN, CUSTOMER"
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created"
					},
					"400": {
						"description": "Bad Request"
					}
				},
				"tags": [
					"Users"
				]
			}
		},
		"/user/login": {
			"post": {
				"summary": "Login as an user",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"example": "john@example.com"
									},
									"password": {
										"type": "string",
										"pattern": "^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$",
										"example": "U2FsdGVkX1+ILQ91VejAVpr/xiaq/Mf0XsHxR7fEKR4=",
										"description": "Password@123"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"tags": [
					"Users"
				]
			}
		},
		"/user/verify": {
			"post": {
				"summary": "Verify user account",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"example": "john@example.com"
									},
									"expires": {
										"type": "string",
										"format": "date-time",
										"example": "2024-03-15T12:00:00Z"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad Request"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"tags": [
					"Users"
				]
			}
		},
		"/user/forget": {
			"post": {
				"summary": "Send password reset email",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"example": "john@example.com"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad Request"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"tags": [
					"Users"
				]
			}
		},
		"/user/reset": {
			"post": {
				"summary": "Reset user password",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"format": "email",
										"example": "john@example.com"
									},
									"newPassword": {
										"type": "string",
										"pattern": "^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$",
										"example": "U2FsdGVkX1+ILQ91VejAVpr/xiaq/Mf0XsHxR7fEKR4=",
										"description": "Password@123"
									},
									"expires": {
										"type": "string",
										"format": "date-time",
										"example": "2024-03-15T12:00:00Z"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad Request"
					},
					"403": {
						"description": "Forbidden"
					}
				},
				"tags": [
					"Users"
				]
			}
		},
		"/user/invite": {
			"post": {
				"tags": [
					"User Invitation"
				],
				"summary": "Invite a user",
				"description": "Invites a user by email.",
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "User invitation details",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"email": {
									"type": "string",
									"format": "email"
								},
								"invite": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": [
					"User Invitation"
				],
				"summary": "List invites",
				"description": "Lists all invites sent by the authenticated user.",
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"description": "Number of invites to return (default: 10)",
						"type": "integer"
					},
					{
						"in": "query",
						"name": "skip",
						"description": "Number of invites to skip (default: 0)",
						"type": "integer"
					},
					{
						"in": "query",
						"name": "sort_key",
						"description": "Key to sort invites by (default: 'updatedAt')",
						"type": "string"
					},
					{
						"in": "query",
						"name": "sort_order",
						"description": "Order to sort invites by (default: 'DESC')",
						"type": "string"
					},
					{
						"in": "query",
						"name": "filter_key",
						"description": "Key to filter invites by",
						"type": "string"
					},
					{
						"in": "query",
						"name": "filter_value",
						"description": "Value to filter invites by",
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Invite"
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"User Invitation"
				],
				"summary": "Remove invite",
				"description": "Removes an invite sent by the authenticated user.",
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Invite ID to remove",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/hotels": {
			"post": {
				"tags": [
					"Hotel"
				],
				"summary": "Create a new hotel",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"address": {
										"type": "string"
									},
									"care_number": {
										"type": "string"
									},
									"open_time": {
										"type": "string"
									},
									"close_time": {
										"type": "string"
									}
								},
								"required": [
									"name",
									"address",
									"care_number",
									"open_time",
									"close_time"
								]
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created"
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"put": {
				"tags": [
					"Hotel"
				],
				"summary": "Update an existing hotel",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"address": {
										"type": "string"
									},
									"care_number": {
										"type": "string"
									},
									"open_time": {
										"type": "string"
									},
									"close_time": {
										"type": "string"
									}
								},
								"required": [
									"name",
									"address",
									"care_number",
									"open_time",
									"close_time"
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Bad request"
					},
					"401": {
						"description": "Unauthorized"
					}
				}
			}
		}
	}
}
